rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ===== Public catalog (read-only) =====
    match /products/{doc} {
      allow read: if true;                 // public can read
      allow write: if request.auth != null && isAdmin();
    }

    match /events/{doc} {
      allow read: if true;                 // public can read
      allow write: if request.auth != null && isAdmin();
    }

    // ===== Contact messages =====
    match /messages/{doc} {
      // Public can create messages with basic validation
      allow create: if isValidMessage();
      // Only admins can read/update status or delete
      allow read, update, delete: if request.auth != null && isAdmin();
    }

    // ===== Admin-side collections =====
    match /notifications/{doc} {
      allow read, write: if request.auth != null && isAdmin();
    }
    match /activities/{doc} {
      allow read, write: if request.auth != null && isAdmin();
    }

    // ===== Daily stats (visits) =====
    match /stats/{daily}/{rest=**} {
      // Public can increment visit counters via client (demo). For production
      // prefer Cloud Functions to write.
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }

    function isAdmin() {
      // Option A: custom claims: request.auth.token.admin == true
      return request.auth.token.admin == true ||
             // Option B: explicit UID allowlist
             (request.auth.uid in ["ADMIN_UID_1", "ADMIN_UID_2"]);
    }

    function isValidMessage() {
      return request.resource.data.keys().hasOnly(["name","email","phone","subject","message","status","createdAt"]) &&
             request.resource.data.name is string && request.resource.data.name.size() > 0 && request.resource.data.name.size() <= 100 &&
             request.resource.data.email is string && request.resource.data.email.size() > 0 && request.resource.data.email.size() <= 200 &&
             (!('phone' in request.resource.data) || request.resource.data.phone is string && request.resource.data.phone.size() <= 30) &&
             request.resource.data.subject is string && request.resource.data.subject.size() > 0 && request.resource.data.subject.size() <= 200 &&
             request.resource.data.message is string && request.resource.data.message.size() > 0 && request.resource.data.message.size() <= 5000 &&
             request.resource.data.status == 'new' &&
             request.time.toMillis() - request.resource.data.createdAt <= 5 * 60 * 1000; // created within last 5 minutes
    }
  }
}

// Notes:
// - Replace ADMIN_UID_* with actual admin UID(s) after enabling Firebase Auth.
// - For a quick demo (no Auth), temporarily relax messages read for admins only,
//   or keep current demo rules in Firebase console and deploy this file for prod.

